// Generated by CoffeeScript 1.6.3
var filter, filterFlag, settings;

settings = {
  enabled: false
};

filterFlag = true;

console.log('content');

chrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {
  console.log('content msg', request);
  if (request.type === "reFilter") {
    settings = request;
    filter();
  }
  return sendResponse({
    status: "ok"
  });
});

chrome.runtime.sendMessage({
  type: "getSettings"
}, function(set) {
  settings = set;
  return filter();
});

filter = function() {
  var filterText;
  if (!(settings != null ? settings.enabled : void 0)) {
    return;
  }
  if (filterFlag) {
    filterFlag = false;
    setTimeout((function() {
      return filterFlag = true;
    }), 500);
    filterText = settings.filter;
    console.log('filtering by', filterText);
    $('[data-txt]').each(function(i, e) {
      return $(e).text($(e).attr('data-txt')).removeAttr('data-txt').removeClass('filter');
    });
    if (filterText.length === 0) {
      return;
    }
    return filterText.split(',').forEach(function(text) {
      var htmlElements;
      htmlElements = [];
      return 'p,a,span'.split(',').forEach(function(htmlElement) {
        htmlElements.push(htmlElement + ":contains('" + text + "')");
        return $(htmlElements.join(',')).each(function(i, e) {
          return $(e).attr('data-txt', $(e).text()).text('SHUTUP!').addClass('filter');
        });
      });
    });
  }
};

$(function() {
  var f, injectedScript, main;
  $.expr[":"].contains = jQuery.expr.createPseudo(function(arg) {
    return function(elem) {
      return jQuery(elem).text().toUpperCase().indexOf(arg.toUpperCase()) >= 0;
    };
  });
  main = function() {
    var fireCustomEvent, myEvent;
    fireCustomEvent = function() {
      return document.body.dispatchEvent(myEvent);
    };
    myEvent = document.createEvent("Event");
    myEvent.initEvent("CustomEvent", true, true);
    if (typeof $ !== 'undefined' && typeof $(document).ajaxComplete !== 'undefined') {
      return $(document).ajaxComplete(function(event, request, settings) {
        fireCustomEvent();
      });
    } else {
      (function(){
        XMLHttpRequest.prototype.send = (function(orig){
            return function(){
                var xhr = this,
                waiter = setInterval(function(){
                  console.log('trying2');
                    if(xhr.readyState && xhr.readyState == 4){                  
                        fireCustomEvent();
                        clearInterval(waiter);
                    }
                }, 250);
                return orig.apply(this, arguments);
            };
        })(XMLHttpRequest.prototype.send);
      })();;
    }
  };
  injectedScript = document.createElement("script");
  injectedScript.type = "text/javascript";
  injectedScript.text = "(" + main + ")(\"\");";
  (document.body || document.head).appendChild(injectedScript);
  f = null;
  return document.body.addEventListener("CustomEvent", function() {
    filter();
  });
});
